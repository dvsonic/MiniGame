// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ai.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Message {

  /// <summary>Holder for reflection information generated from ai.proto</summary>
  public static partial class AiReflection {

    #region Descriptor
    /// <summary>File descriptor for ai.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghhaS5wcm90bxIHTWVzc2FnZSKIAgoCQUkigQIKBVByb3RvEg4KClByb3Rv",
            "X05PTkUQABIRCg1DMlNDaGF0QXNrUmVxEAESFAoQUzJDQ2hhdEFuc3dlclJl",
            "cxACEhQKEFMyQ0NoYXRBc2tOb3RpZnkQAxIXChNTMkNDaGF0QW5zd2VyTm90",
            "aWZ5EAQSFwoTQzJTQ2hhdEhlYXJ0QmVhdFJlcRAFEhcKE1MyQ0NoYXRIZWFy",
            "dEJlYXRSZXMQBhITCg9DMlNDaGF0TG9naW5SZXEQBxITCg9TMkNDaGF0TG9n",
            "aW5SZXMQCBIZChVDMlNDaGFuZ2VDaGFyYWN0ZXJSZXEQCRIZChVTMkNDaGFu",
            "Z2VDaGFyYWN0ZXJSZXMQCiJjCg1DMlNDaGF0QXNrUmVxEh8KBHR5cGUYASAB",
            "KA4yES5NZXNzYWdlLkNoYXRUeXBlEhIKCHN0clZhbHVlGAIgASgJSAASEgoI",
            "c25kVmFsdWUYAyABKAxIAEIJCgdjb250ZW50IlcKEFMyQ0NoYXRBbnN3ZXJS",
            "ZXMSCwoDcmV0GAEgASgFEhAKCHN0clZhbHVlGAIgASgJEhAKCHNuZFZhbHVl",
            "GAMgASgMEhIKCnNlbnRpVmFsdWUYBCABKAUiZgoQUzJDQ2hhdEFza05vdGlm",
            "eRIfCgR0eXBlGAEgASgOMhEuTWVzc2FnZS5DaGF0VHlwZRISCghzdHJWYWx1",
            "ZRgCIAEoCUgAEhIKCHNuZFZhbHVlGAMgASgMSABCCQoHY29udGVudCJNChNT",
            "MkNDaGF0QW5zd2VyTm90aWZ5EhAKCHN0clZhbHVlGAEgASgJEhAKCHNuZFZh",
            "bHVlGAIgASgMEhIKCnNlbnRpVmFsdWUYAyABKAUiFQoTQzJTQ2hhdEhlYXJ0",
            "QmVhdFJlcSIVChNTMkNDaGF0SGVhcnRCZWF0UmVzIjkKDUNoYXJhY3Rlcklu",
            "Zm8SEQoJY2hhcl9uYW1lGAEgASgJEhUKDWNoYXJfYWZmaW5pdHkYAiABKAUi",
            "OwoLVXNlclByb2ZpbGUSLAoMYWxsQ2hhcmFjdGVyGAEgAygLMhYuTWVzc2Fn",
            "ZS5DaGFyYWN0ZXJJbmZvIiMKD0MyU0NoYXRMb2dpblJlcRIQCghuaWNrTmFt",
            "ZRgBIAEoCSJFCg9TMkNDaGF0TG9naW5SZXMSCwoDcmV0GAEgASgFEiUKB3By",
            "b2ZpbGUYAiABKAsyFC5NZXNzYWdlLlVzZXJQcm9maWxlIioKFUMyU0NoYW5n",
            "ZUNoYXJhY3RlclJlcRIRCgljaGFyX25hbWUYASABKAkiJAoVUzJDQ2hhbmdl",
            "Q2hhcmFjdGVyUmVzEgsKA3JldBgBIAEoBSofCghDaGF0VHlwZRIICgRURVhU",
            "EAASCQoFVk9JQ0UQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Message.ChatType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.AI), global::Message.AI.Parser, null, null, new[]{ typeof(global::Message.AI.Types.Proto) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.C2SChatAskReq), global::Message.C2SChatAskReq.Parser, new[]{ "Type", "StrValue", "SndValue" }, new[]{ "Content" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChatAnswerRes), global::Message.S2CChatAnswerRes.Parser, new[]{ "Ret", "StrValue", "SndValue", "SentiValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChatAskNotify), global::Message.S2CChatAskNotify.Parser, new[]{ "Type", "StrValue", "SndValue" }, new[]{ "Content" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChatAnswerNotify), global::Message.S2CChatAnswerNotify.Parser, new[]{ "StrValue", "SndValue", "SentiValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.C2SChatHeartBeatReq), global::Message.C2SChatHeartBeatReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChatHeartBeatRes), global::Message.S2CChatHeartBeatRes.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.CharacterInfo), global::Message.CharacterInfo.Parser, new[]{ "CharName", "CharAffinity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.UserProfile), global::Message.UserProfile.Parser, new[]{ "AllCharacter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.C2SChatLoginReq), global::Message.C2SChatLoginReq.Parser, new[]{ "NickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChatLoginRes), global::Message.S2CChatLoginRes.Parser, new[]{ "Ret", "Profile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.C2SChangeCharacterReq), global::Message.C2SChangeCharacterReq.Parser, new[]{ "CharName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.S2CChangeCharacterRes), global::Message.S2CChangeCharacterRes.Parser, new[]{ "Ret" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ChatType {
    [pbr::OriginalName("TEXT")] Text = 0,
    [pbr::OriginalName("VOICE")] Voice = 1,
  }

  #endregion

  #region Messages
  public sealed partial class AI : pb::IMessage<AI> {
    private static readonly pb::MessageParser<AI> _parser = new pb::MessageParser<AI>(() => new AI());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AI(AI other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AI Clone() {
      return new AI(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AI other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AI message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Proto {
        [pbr::OriginalName("Proto_NONE")] None = 0,
        [pbr::OriginalName("C2SChatAskReq")] C2SchatAskReq = 1,
        [pbr::OriginalName("S2CChatAnswerRes")] S2CchatAnswerRes = 2,
        [pbr::OriginalName("S2CChatAskNotify")] S2CchatAskNotify = 3,
        [pbr::OriginalName("S2CChatAnswerNotify")] S2CchatAnswerNotify = 4,
        [pbr::OriginalName("C2SChatHeartBeatReq")] C2SchatHeartBeatReq = 5,
        [pbr::OriginalName("S2CChatHeartBeatRes")] S2CchatHeartBeatRes = 6,
        [pbr::OriginalName("C2SChatLoginReq")] C2SchatLoginReq = 7,
        [pbr::OriginalName("S2CChatLoginRes")] S2CchatLoginRes = 8,
        [pbr::OriginalName("C2SChangeCharacterReq")] C2SchangeCharacterReq = 9,
        [pbr::OriginalName("S2CChangeCharacterRes")] S2CchangeCharacterRes = 10,
      }

    }
    #endregion

  }

  public sealed partial class C2SChatAskReq : pb::IMessage<C2SChatAskReq> {
    private static readonly pb::MessageParser<C2SChatAskReq> _parser = new pb::MessageParser<C2SChatAskReq>(() => new C2SChatAskReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChatAskReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatAskReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatAskReq(C2SChatAskReq other) : this() {
      type_ = other.type_;
      switch (other.ContentCase) {
        case ContentOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case ContentOneofCase.SndValue:
          SndValue = other.SndValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatAskReq Clone() {
      return new C2SChatAskReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Message.ChatType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.ChatType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "strValue" field.</summary>
    public const int StrValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrValue {
      get { return contentCase_ == ContentOneofCase.StrValue ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.StrValue;
      }
    }

    /// <summary>Field number for the "sndValue" field.</summary>
    public const int SndValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SndValue {
      get { return contentCase_ == ContentOneofCase.SndValue ? (pb::ByteString) content_ : pb::ByteString.Empty; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.SndValue;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      StrValue = 2,
      SndValue = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChatAskReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChatAskReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (StrValue != other.StrValue) return false;
      if (SndValue != other.SndValue) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (contentCase_ == ContentOneofCase.StrValue) hash ^= StrValue.GetHashCode();
      if (contentCase_ == ContentOneofCase.SndValue) hash ^= SndValue.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (contentCase_ == ContentOneofCase.StrValue) {
        output.WriteRawTag(18);
        output.WriteString(StrValue);
      }
      if (contentCase_ == ContentOneofCase.SndValue) {
        output.WriteRawTag(26);
        output.WriteBytes(SndValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (contentCase_ == ContentOneofCase.StrValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
      }
      if (contentCase_ == ContentOneofCase.SndValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SndValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChatAskReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case ContentOneofCase.SndValue:
          SndValue = other.SndValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Message.ChatType) input.ReadEnum();
            break;
          }
          case 18: {
            StrValue = input.ReadString();
            break;
          }
          case 26: {
            SndValue = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChatAnswerRes : pb::IMessage<S2CChatAnswerRes> {
    private static readonly pb::MessageParser<S2CChatAnswerRes> _parser = new pb::MessageParser<S2CChatAnswerRes>(() => new S2CChatAnswerRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatAnswerRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerRes(S2CChatAnswerRes other) : this() {
      ret_ = other.ret_;
      strValue_ = other.strValue_;
      sndValue_ = other.sndValue_;
      sentiValue_ = other.sentiValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerRes Clone() {
      return new S2CChatAnswerRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "strValue" field.</summary>
    public const int StrValueFieldNumber = 2;
    private string strValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrValue {
      get { return strValue_; }
      set {
        strValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sndValue" field.</summary>
    public const int SndValueFieldNumber = 3;
    private pb::ByteString sndValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SndValue {
      get { return sndValue_; }
      set {
        sndValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sentiValue" field.</summary>
    public const int SentiValueFieldNumber = 4;
    private int sentiValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SentiValue {
      get { return sentiValue_; }
      set {
        sentiValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatAnswerRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatAnswerRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (StrValue != other.StrValue) return false;
      if (SndValue != other.SndValue) return false;
      if (SentiValue != other.SentiValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (StrValue.Length != 0) hash ^= StrValue.GetHashCode();
      if (SndValue.Length != 0) hash ^= SndValue.GetHashCode();
      if (SentiValue != 0) hash ^= SentiValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (StrValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrValue);
      }
      if (SndValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SndValue);
      }
      if (SentiValue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SentiValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (StrValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
      }
      if (SndValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SndValue);
      }
      if (SentiValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SentiValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatAnswerRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.StrValue.Length != 0) {
        StrValue = other.StrValue;
      }
      if (other.SndValue.Length != 0) {
        SndValue = other.SndValue;
      }
      if (other.SentiValue != 0) {
        SentiValue = other.SentiValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 18: {
            StrValue = input.ReadString();
            break;
          }
          case 26: {
            SndValue = input.ReadBytes();
            break;
          }
          case 32: {
            SentiValue = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChatAskNotify : pb::IMessage<S2CChatAskNotify> {
    private static readonly pb::MessageParser<S2CChatAskNotify> _parser = new pb::MessageParser<S2CChatAskNotify>(() => new S2CChatAskNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatAskNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAskNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAskNotify(S2CChatAskNotify other) : this() {
      type_ = other.type_;
      switch (other.ContentCase) {
        case ContentOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case ContentOneofCase.SndValue:
          SndValue = other.SndValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAskNotify Clone() {
      return new S2CChatAskNotify(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Message.ChatType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.ChatType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "strValue" field.</summary>
    public const int StrValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrValue {
      get { return contentCase_ == ContentOneofCase.StrValue ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.StrValue;
      }
    }

    /// <summary>Field number for the "sndValue" field.</summary>
    public const int SndValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SndValue {
      get { return contentCase_ == ContentOneofCase.SndValue ? (pb::ByteString) content_ : pb::ByteString.Empty; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.SndValue;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      StrValue = 2,
      SndValue = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatAskNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatAskNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (StrValue != other.StrValue) return false;
      if (SndValue != other.SndValue) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (contentCase_ == ContentOneofCase.StrValue) hash ^= StrValue.GetHashCode();
      if (contentCase_ == ContentOneofCase.SndValue) hash ^= SndValue.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (contentCase_ == ContentOneofCase.StrValue) {
        output.WriteRawTag(18);
        output.WriteString(StrValue);
      }
      if (contentCase_ == ContentOneofCase.SndValue) {
        output.WriteRawTag(26);
        output.WriteBytes(SndValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (contentCase_ == ContentOneofCase.StrValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
      }
      if (contentCase_ == ContentOneofCase.SndValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SndValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatAskNotify other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.StrValue:
          StrValue = other.StrValue;
          break;
        case ContentOneofCase.SndValue:
          SndValue = other.SndValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Message.ChatType) input.ReadEnum();
            break;
          }
          case 18: {
            StrValue = input.ReadString();
            break;
          }
          case 26: {
            SndValue = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChatAnswerNotify : pb::IMessage<S2CChatAnswerNotify> {
    private static readonly pb::MessageParser<S2CChatAnswerNotify> _parser = new pb::MessageParser<S2CChatAnswerNotify>(() => new S2CChatAnswerNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatAnswerNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerNotify(S2CChatAnswerNotify other) : this() {
      strValue_ = other.strValue_;
      sndValue_ = other.sndValue_;
      sentiValue_ = other.sentiValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatAnswerNotify Clone() {
      return new S2CChatAnswerNotify(this);
    }

    /// <summary>Field number for the "strValue" field.</summary>
    public const int StrValueFieldNumber = 1;
    private string strValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrValue {
      get { return strValue_; }
      set {
        strValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sndValue" field.</summary>
    public const int SndValueFieldNumber = 2;
    private pb::ByteString sndValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SndValue {
      get { return sndValue_; }
      set {
        sndValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sentiValue" field.</summary>
    public const int SentiValueFieldNumber = 3;
    private int sentiValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SentiValue {
      get { return sentiValue_; }
      set {
        sentiValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatAnswerNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatAnswerNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StrValue != other.StrValue) return false;
      if (SndValue != other.SndValue) return false;
      if (SentiValue != other.SentiValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StrValue.Length != 0) hash ^= StrValue.GetHashCode();
      if (SndValue.Length != 0) hash ^= SndValue.GetHashCode();
      if (SentiValue != 0) hash ^= SentiValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StrValue.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrValue);
      }
      if (SndValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SndValue);
      }
      if (SentiValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SentiValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StrValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
      }
      if (SndValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SndValue);
      }
      if (SentiValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SentiValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatAnswerNotify other) {
      if (other == null) {
        return;
      }
      if (other.StrValue.Length != 0) {
        StrValue = other.StrValue;
      }
      if (other.SndValue.Length != 0) {
        SndValue = other.SndValue;
      }
      if (other.SentiValue != 0) {
        SentiValue = other.SentiValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StrValue = input.ReadString();
            break;
          }
          case 18: {
            SndValue = input.ReadBytes();
            break;
          }
          case 24: {
            SentiValue = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SChatHeartBeatReq : pb::IMessage<C2SChatHeartBeatReq> {
    private static readonly pb::MessageParser<C2SChatHeartBeatReq> _parser = new pb::MessageParser<C2SChatHeartBeatReq>(() => new C2SChatHeartBeatReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChatHeartBeatReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatHeartBeatReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatHeartBeatReq(C2SChatHeartBeatReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatHeartBeatReq Clone() {
      return new C2SChatHeartBeatReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChatHeartBeatReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChatHeartBeatReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChatHeartBeatReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class S2CChatHeartBeatRes : pb::IMessage<S2CChatHeartBeatRes> {
    private static readonly pb::MessageParser<S2CChatHeartBeatRes> _parser = new pb::MessageParser<S2CChatHeartBeatRes>(() => new S2CChatHeartBeatRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatHeartBeatRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatHeartBeatRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatHeartBeatRes(S2CChatHeartBeatRes other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatHeartBeatRes Clone() {
      return new S2CChatHeartBeatRes(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatHeartBeatRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatHeartBeatRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatHeartBeatRes other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CharacterInfo : pb::IMessage<CharacterInfo> {
    private static readonly pb::MessageParser<CharacterInfo> _parser = new pb::MessageParser<CharacterInfo>(() => new CharacterInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharacterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterInfo(CharacterInfo other) : this() {
      charName_ = other.charName_;
      charAffinity_ = other.charAffinity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterInfo Clone() {
      return new CharacterInfo(this);
    }

    /// <summary>Field number for the "char_name" field.</summary>
    public const int CharNameFieldNumber = 1;
    private string charName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharName {
      get { return charName_; }
      set {
        charName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "char_affinity" field.</summary>
    public const int CharAffinityFieldNumber = 2;
    private int charAffinity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharAffinity {
      get { return charAffinity_; }
      set {
        charAffinity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharacterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharacterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharName != other.CharName) return false;
      if (CharAffinity != other.CharAffinity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CharName.Length != 0) hash ^= CharName.GetHashCode();
      if (CharAffinity != 0) hash ^= CharAffinity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CharName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CharName);
      }
      if (CharAffinity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CharAffinity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CharName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharName);
      }
      if (CharAffinity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharAffinity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharacterInfo other) {
      if (other == null) {
        return;
      }
      if (other.CharName.Length != 0) {
        CharName = other.CharName;
      }
      if (other.CharAffinity != 0) {
        CharAffinity = other.CharAffinity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CharName = input.ReadString();
            break;
          }
          case 16: {
            CharAffinity = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserProfile : pb::IMessage<UserProfile> {
    private static readonly pb::MessageParser<UserProfile> _parser = new pb::MessageParser<UserProfile>(() => new UserProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile(UserProfile other) : this() {
      allCharacter_ = other.allCharacter_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile Clone() {
      return new UserProfile(this);
    }

    /// <summary>Field number for the "allCharacter" field.</summary>
    public const int AllCharacterFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Message.CharacterInfo> _repeated_allCharacter_codec
        = pb::FieldCodec.ForMessage(10, global::Message.CharacterInfo.Parser);
    private readonly pbc::RepeatedField<global::Message.CharacterInfo> allCharacter_ = new pbc::RepeatedField<global::Message.CharacterInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Message.CharacterInfo> AllCharacter {
      get { return allCharacter_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allCharacter_.Equals(other.allCharacter_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allCharacter_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allCharacter_.WriteTo(output, _repeated_allCharacter_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allCharacter_.CalculateSize(_repeated_allCharacter_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserProfile other) {
      if (other == null) {
        return;
      }
      allCharacter_.Add(other.allCharacter_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allCharacter_.AddEntriesFrom(input, _repeated_allCharacter_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SChatLoginReq : pb::IMessage<C2SChatLoginReq> {
    private static readonly pb::MessageParser<C2SChatLoginReq> _parser = new pb::MessageParser<C2SChatLoginReq>(() => new C2SChatLoginReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChatLoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatLoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatLoginReq(C2SChatLoginReq other) : this() {
      nickName_ = other.nickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChatLoginReq Clone() {
      return new C2SChatLoginReq(this);
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 1;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChatLoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChatLoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NickName != other.NickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NickName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChatLoginReq other) {
      if (other == null) {
        return;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChatLoginRes : pb::IMessage<S2CChatLoginRes> {
    private static readonly pb::MessageParser<S2CChatLoginRes> _parser = new pb::MessageParser<S2CChatLoginRes>(() => new S2CChatLoginRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChatLoginRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatLoginRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatLoginRes(S2CChatLoginRes other) : this() {
      ret_ = other.ret_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChatLoginRes Clone() {
      return new S2CChatLoginRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 2;
    private global::Message.UserProfile profile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.UserProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChatLoginRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChatLoginRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (profile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChatLoginRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::Message.UserProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 18: {
            if (profile_ == null) {
              Profile = new global::Message.UserProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SChangeCharacterReq : pb::IMessage<C2SChangeCharacterReq> {
    private static readonly pb::MessageParser<C2SChangeCharacterReq> _parser = new pb::MessageParser<C2SChangeCharacterReq>(() => new C2SChangeCharacterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SChangeCharacterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeCharacterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeCharacterReq(C2SChangeCharacterReq other) : this() {
      charName_ = other.charName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SChangeCharacterReq Clone() {
      return new C2SChangeCharacterReq(this);
    }

    /// <summary>Field number for the "char_name" field.</summary>
    public const int CharNameFieldNumber = 1;
    private string charName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharName {
      get { return charName_; }
      set {
        charName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SChangeCharacterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SChangeCharacterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharName != other.CharName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CharName.Length != 0) hash ^= CharName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CharName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CharName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CharName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SChangeCharacterReq other) {
      if (other == null) {
        return;
      }
      if (other.CharName.Length != 0) {
        CharName = other.CharName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CharName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CChangeCharacterRes : pb::IMessage<S2CChangeCharacterRes> {
    private static readonly pb::MessageParser<S2CChangeCharacterRes> _parser = new pb::MessageParser<S2CChangeCharacterRes>(() => new S2CChangeCharacterRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CChangeCharacterRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.AiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeCharacterRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeCharacterRes(S2CChangeCharacterRes other) : this() {
      ret_ = other.ret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CChangeCharacterRes Clone() {
      return new S2CChangeCharacterRes(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CChangeCharacterRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CChangeCharacterRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CChangeCharacterRes other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
